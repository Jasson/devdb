guoguo的私有功能对ejabberd服务器性能的影响

1. 好友的黑名单功能 - [无影响]
2. 添加好友的附加消息 - [无影响]
3. 用户注册后自动添加自己为好友 - [无影响]
4. IP相关
   4.1 记录IP - [有影响] 
       (一个session周期内的附加操作: 2 MySQL Read + 2 MySQL Write)
   4.2 显示IP - [无影响]
5. 记录Session - [有影响] 
   (一个session周期内的附加操作: 1 MySQL Write)
6. 用户在线升级
   6.1 数据库同步 - [有影响]
       (一个session周期内的附加操作: 1 MySQL Read + 1 MySQL Write)
   6.2 一次在线时间IQ查询 - [有影响]
       (附加: 1 MySQL Read)
   6.3 一次VCard的IQ查询 - [有影响]
       (附加: 1 MySQL Read)
7. 同城好友推荐
   7.1 维护推荐索引 - [有影响]
       (一个session周期内的附加操作: 1 MySQL Read + 1-3 Redis SET ADD + 1-3 Redis SET RM)
   7.2 一次推荐好友请求 - [有影响]
       (附加: 2 MySQL Read + 3-18次Redis SET READ)

详细信息:
===============================================
1. 好友的黑名单功能 - [无影响]

我们仍然使用XEP-0016来实现隐私列表的处理, 在新用户注册的时候通过写入默认数据到MySQL DB的
方式, 帮助用户建立一个默认的隐私列表, 并让该隐私列表'生效', 这样用户可以直接使用而无须走
XMPP协议去额外设置, 对ejabberd的性能无影响.

===============================================
2. 添加好友的附加消息 - [无影响]

通过在订阅请求<presence/>中附加子元素<status/>的方式实现添加好友的附加请求,
对ejabberd性能无影响.

===============================================
3. 用户注册后自动添加自己为好友 - [无影响]

在注册的时候, 通过写入默认数据到MySQL DB的方式, 是用户添加自己到自己的roster中, 无须走
XMPP协议设置, 对ejabberd的性能无影响.

===============================================
4. 记录 & 显示用户IP - [有影响]
<1> 记录IP
增加了这个模块, 在用户每次登录和登出的时候, 都增加了'一次MySQL read操作和一次MySQL wirte
操作'. 在用户的一个session周期内(login-logout), 总共增加了4次MySQL操作, 2次读操作和2次写
操作, 都是针对youbao_online_ip表.

<2> 显示IP
走Web接口, 对ejabberd的性能无影响.

===============================================
5. 用户session日志 - [有影响]

该模块会记录所有的用户session信息到MySQL DB, 供日后分析, 该模块在用户的一个session
周期内(login-logout)只有1次MySQL write操作, 就是当用户logout的时候把这次session
信息写入youbao_session_log表.

===============================================
6. 用户在线升级 - [有影响]

<1> 在用户的一个session周期内(login-logout), 总共增加了2次MySQL操作, 1次读操作和1次写
操作. 当用户logout的时候根据这次session的时间更新youbao_onlinetime表.
<2> 用户每次通过IQ查询一次用户在线时间, 会增加一次MySQL读操作.
<3> 用户每次通过IQ查询一次VCard信息, 会增加一次MySQL读操作(我们把用户在线时间作为扩展增加到
VCard中).

===============================================
7. 同城好友推荐 - [有影响]
通过构建推荐索引的方式, 把推荐好友的查询压力从MySQL移到了redis, redis有每秒接近10万次GET操作的性能,
适合构建推荐引擎.

<1> 构建索引的损耗
在用户的一个session周期内(login-logout), 会有2次索引的更新, 用户登录的时候把自己的信息
写入到'推荐索引中'; 用户登出的时候, 把自己的信息从'推荐索引中删除', 这个过程有一次MySQL DB读操作,
和1-3次redis_set_add操作, 1-3次redis_set_rm操作.
<2> 用户一次推荐好友的请求
用户一次推荐好友的IQ请求, 系统会自动推荐三个好友, 这会产生2次MySQL DB读操作, 和3-18次redis_set_read
操作, 在一般情况下, 通常是3次redis_set_read操作就可以返回结果. 在最差情况下会有18次redis_set_read操作.





